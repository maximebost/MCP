// package: bigblue.common
// file: bigblue/common/logentry.proto

import * as jspb from "google-protobuf";

export class LogEntry extends jspb.Message {
  getReference(): string;
  setReference(value: string): void;

  getCreateTime(): string;
  setCreateTime(value: string): void;

  getOperator(): string;
  setOperator(value: string): void;

  getShort(): string;
  setShort(value: string): void;

  getDescription(): string;
  setDescription(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): LogEntry.AsObject;
  static toObject(includeInstance: boolean, msg: LogEntry): LogEntry.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: LogEntry, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): LogEntry;
  static deserializeBinaryFromReader(message: LogEntry, reader: jspb.BinaryReader): LogEntry;
}

export namespace LogEntry {
  export type AsObject = {
    reference: string,
    createTime: string,
    operator: string,
    pb_short: string,
    description: string,
  }
}


