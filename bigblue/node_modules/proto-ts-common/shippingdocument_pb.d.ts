// package: bigblue.common
// file: bigblue/common/shippingdocument.proto

import * as jspb from "google-protobuf";

export class ShippingDocument extends jspb.Message {
  getType(): ShippingDocument.TypeMap[keyof ShippingDocument.TypeMap];
  setType(value: ShippingDocument.TypeMap[keyof ShippingDocument.TypeMap]): void;

  getUrl(): string;
  setUrl(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ShippingDocument.AsObject;
  static toObject(includeInstance: boolean, msg: ShippingDocument): ShippingDocument.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ShippingDocument, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ShippingDocument;
  static deserializeBinaryFromReader(message: ShippingDocument, reader: jspb.BinaryReader): ShippingDocument;
}

export namespace ShippingDocument {
  export type AsObject = {
    type: ShippingDocument.TypeMap[keyof ShippingDocument.TypeMap],
    url: string,
  }

  export interface TypeMap {
    DELIVERY_NOTE: 0;
    INVOICE: 1;
    CUSTOMS_DOC: 2;
    INVOICE_WITH_TAX: 3;
  }

  export const Type: TypeMap;
}


