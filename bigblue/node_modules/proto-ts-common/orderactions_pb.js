// source: bigblue/common/orderactions.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.bigblue.common.OrderActions', null, global);
goog.exportSymbol('proto.bigblue.common.OrderActions.FulfillmentReads', null, global);
goog.exportSymbol('proto.bigblue.common.OrderActions.FulfillmentUpdates', null, global);
goog.exportSymbol('proto.bigblue.common.OrderActions.OrderUpdates', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bigblue.common.OrderActions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bigblue.common.OrderActions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bigblue.common.OrderActions.displayName = 'proto.bigblue.common.OrderActions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bigblue.common.OrderActions.OrderUpdates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bigblue.common.OrderActions.OrderUpdates.repeatedFields_, null);
};
goog.inherits(proto.bigblue.common.OrderActions.OrderUpdates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bigblue.common.OrderActions.OrderUpdates.displayName = 'proto.bigblue.common.OrderActions.OrderUpdates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bigblue.common.OrderActions.FulfillmentReads = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bigblue.common.OrderActions.FulfillmentReads, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bigblue.common.OrderActions.FulfillmentReads.displayName = 'proto.bigblue.common.OrderActions.FulfillmentReads';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bigblue.common.OrderActions.FulfillmentUpdates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bigblue.common.OrderActions.FulfillmentUpdates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bigblue.common.OrderActions.FulfillmentUpdates.displayName = 'proto.bigblue.common.OrderActions.FulfillmentUpdates';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bigblue.common.OrderActions.prototype.toObject = function(opt_includeInstance) {
  return proto.bigblue.common.OrderActions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bigblue.common.OrderActions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.common.OrderActions.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderUpdates: (f = msg.getOrderUpdates()) && proto.bigblue.common.OrderActions.OrderUpdates.toObject(includeInstance, f),
    fulfillmentUpdatesesMap: (f = msg.getFulfillmentUpdatesesMap()) ? f.toObject(includeInstance, proto.bigblue.common.OrderActions.FulfillmentUpdates.toObject) : [],
    fulfillmentReadsMap: (f = msg.getFulfillmentReadsMap()) ? f.toObject(includeInstance, proto.bigblue.common.OrderActions.FulfillmentReads.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bigblue.common.OrderActions}
 */
proto.bigblue.common.OrderActions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bigblue.common.OrderActions;
  return proto.bigblue.common.OrderActions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bigblue.common.OrderActions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bigblue.common.OrderActions}
 */
proto.bigblue.common.OrderActions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bigblue.common.OrderActions.OrderUpdates;
      reader.readMessage(value,proto.bigblue.common.OrderActions.OrderUpdates.deserializeBinaryFromReader);
      msg.setOrderUpdates(value);
      break;
    case 2:
      var value = msg.getFulfillmentUpdatesesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bigblue.common.OrderActions.FulfillmentUpdates.deserializeBinaryFromReader, "", new proto.bigblue.common.OrderActions.FulfillmentUpdates());
         });
      break;
    case 3:
      var value = msg.getFulfillmentReadsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.bigblue.common.OrderActions.FulfillmentReads.deserializeBinaryFromReader, "", new proto.bigblue.common.OrderActions.FulfillmentReads());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bigblue.common.OrderActions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bigblue.common.OrderActions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bigblue.common.OrderActions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.common.OrderActions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderUpdates();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.bigblue.common.OrderActions.OrderUpdates.serializeBinaryToWriter
    );
  }
  f = message.getFulfillmentUpdatesesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bigblue.common.OrderActions.FulfillmentUpdates.serializeBinaryToWriter);
  }
  f = message.getFulfillmentReadsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.bigblue.common.OrderActions.FulfillmentReads.serializeBinaryToWriter);
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bigblue.common.OrderActions.OrderUpdates.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bigblue.common.OrderActions.OrderUpdates.prototype.toObject = function(opt_includeInstance) {
  return proto.bigblue.common.OrderActions.OrderUpdates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bigblue.common.OrderActions.OrderUpdates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.common.OrderActions.OrderUpdates.toObject = function(includeInstance, msg) {
  var f, obj = {
    customer: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    destination: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    lineItemsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    prices: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    billingAddress: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    preparationInstructions: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bigblue.common.OrderActions.OrderUpdates}
 */
proto.bigblue.common.OrderActions.OrderUpdates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bigblue.common.OrderActions.OrderUpdates;
  return proto.bigblue.common.OrderActions.OrderUpdates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bigblue.common.OrderActions.OrderUpdates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bigblue.common.OrderActions.OrderUpdates}
 */
proto.bigblue.common.OrderActions.OrderUpdates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCustomer(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDestination(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addLineItems(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrices(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBillingAddress(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPreparationInstructions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bigblue.common.OrderActions.OrderUpdates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bigblue.common.OrderActions.OrderUpdates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bigblue.common.OrderActions.OrderUpdates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.common.OrderActions.OrderUpdates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomer();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getDestination();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getLineItemsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getPrices();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getBillingAddress();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getPreparationInstructions();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional bool customer = 1;
 * @return {boolean}
 */
proto.bigblue.common.OrderActions.OrderUpdates.prototype.getCustomer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bigblue.common.OrderActions.OrderUpdates} returns this
 */
proto.bigblue.common.OrderActions.OrderUpdates.prototype.setCustomer = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool destination = 2;
 * @return {boolean}
 */
proto.bigblue.common.OrderActions.OrderUpdates.prototype.getDestination = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bigblue.common.OrderActions.OrderUpdates} returns this
 */
proto.bigblue.common.OrderActions.OrderUpdates.prototype.setDestination = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated string line_items = 3;
 * @return {!Array<string>}
 */
proto.bigblue.common.OrderActions.OrderUpdates.prototype.getLineItemsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.bigblue.common.OrderActions.OrderUpdates} returns this
 */
proto.bigblue.common.OrderActions.OrderUpdates.prototype.setLineItemsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.bigblue.common.OrderActions.OrderUpdates} returns this
 */
proto.bigblue.common.OrderActions.OrderUpdates.prototype.addLineItems = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bigblue.common.OrderActions.OrderUpdates} returns this
 */
proto.bigblue.common.OrderActions.OrderUpdates.prototype.clearLineItemsList = function() {
  return this.setLineItemsList([]);
};


/**
 * optional bool prices = 4;
 * @return {boolean}
 */
proto.bigblue.common.OrderActions.OrderUpdates.prototype.getPrices = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bigblue.common.OrderActions.OrderUpdates} returns this
 */
proto.bigblue.common.OrderActions.OrderUpdates.prototype.setPrices = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool billing_address = 5;
 * @return {boolean}
 */
proto.bigblue.common.OrderActions.OrderUpdates.prototype.getBillingAddress = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bigblue.common.OrderActions.OrderUpdates} returns this
 */
proto.bigblue.common.OrderActions.OrderUpdates.prototype.setBillingAddress = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool preparation_instructions = 6;
 * @return {boolean}
 */
proto.bigblue.common.OrderActions.OrderUpdates.prototype.getPreparationInstructions = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bigblue.common.OrderActions.OrderUpdates} returns this
 */
proto.bigblue.common.OrderActions.OrderUpdates.prototype.setPreparationInstructions = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bigblue.common.OrderActions.FulfillmentReads.prototype.toObject = function(opt_includeInstance) {
  return proto.bigblue.common.OrderActions.FulfillmentReads.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bigblue.common.OrderActions.FulfillmentReads} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.common.OrderActions.FulfillmentReads.toObject = function(includeInstance, msg) {
  var f, obj = {
    packingListData: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    packingListDocument: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bigblue.common.OrderActions.FulfillmentReads}
 */
proto.bigblue.common.OrderActions.FulfillmentReads.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bigblue.common.OrderActions.FulfillmentReads;
  return proto.bigblue.common.OrderActions.FulfillmentReads.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bigblue.common.OrderActions.FulfillmentReads} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bigblue.common.OrderActions.FulfillmentReads}
 */
proto.bigblue.common.OrderActions.FulfillmentReads.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPackingListData(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPackingListDocument(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bigblue.common.OrderActions.FulfillmentReads.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bigblue.common.OrderActions.FulfillmentReads.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bigblue.common.OrderActions.FulfillmentReads} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.common.OrderActions.FulfillmentReads.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPackingListData();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPackingListDocument();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool packing_list_data = 1;
 * @return {boolean}
 */
proto.bigblue.common.OrderActions.FulfillmentReads.prototype.getPackingListData = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bigblue.common.OrderActions.FulfillmentReads} returns this
 */
proto.bigblue.common.OrderActions.FulfillmentReads.prototype.setPackingListData = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool packing_list_document = 2;
 * @return {boolean}
 */
proto.bigblue.common.OrderActions.FulfillmentReads.prototype.getPackingListDocument = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bigblue.common.OrderActions.FulfillmentReads} returns this
 */
proto.bigblue.common.OrderActions.FulfillmentReads.prototype.setPackingListDocument = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bigblue.common.OrderActions.FulfillmentUpdates.prototype.toObject = function(opt_includeInstance) {
  return proto.bigblue.common.OrderActions.FulfillmentUpdates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bigblue.common.OrderActions.FulfillmentUpdates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.common.OrderActions.FulfillmentUpdates.toObject = function(includeInstance, msg) {
  var f, obj = {
    carrierService: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    priority: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    cancel: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bigblue.common.OrderActions.FulfillmentUpdates}
 */
proto.bigblue.common.OrderActions.FulfillmentUpdates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bigblue.common.OrderActions.FulfillmentUpdates;
  return proto.bigblue.common.OrderActions.FulfillmentUpdates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bigblue.common.OrderActions.FulfillmentUpdates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bigblue.common.OrderActions.FulfillmentUpdates}
 */
proto.bigblue.common.OrderActions.FulfillmentUpdates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCarrierService(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPriority(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCancel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bigblue.common.OrderActions.FulfillmentUpdates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bigblue.common.OrderActions.FulfillmentUpdates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bigblue.common.OrderActions.FulfillmentUpdates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.common.OrderActions.FulfillmentUpdates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCarrierService();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPriority();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getCancel();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bool carrier_service = 1;
 * @return {boolean}
 */
proto.bigblue.common.OrderActions.FulfillmentUpdates.prototype.getCarrierService = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bigblue.common.OrderActions.FulfillmentUpdates} returns this
 */
proto.bigblue.common.OrderActions.FulfillmentUpdates.prototype.setCarrierService = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool priority = 2;
 * @return {boolean}
 */
proto.bigblue.common.OrderActions.FulfillmentUpdates.prototype.getPriority = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bigblue.common.OrderActions.FulfillmentUpdates} returns this
 */
proto.bigblue.common.OrderActions.FulfillmentUpdates.prototype.setPriority = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool cancel = 3;
 * @return {boolean}
 */
proto.bigblue.common.OrderActions.FulfillmentUpdates.prototype.getCancel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bigblue.common.OrderActions.FulfillmentUpdates} returns this
 */
proto.bigblue.common.OrderActions.FulfillmentUpdates.prototype.setCancel = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional OrderUpdates order_updates = 1;
 * @return {?proto.bigblue.common.OrderActions.OrderUpdates}
 */
proto.bigblue.common.OrderActions.prototype.getOrderUpdates = function() {
  return /** @type{?proto.bigblue.common.OrderActions.OrderUpdates} */ (
    jspb.Message.getWrapperField(this, proto.bigblue.common.OrderActions.OrderUpdates, 1));
};


/**
 * @param {?proto.bigblue.common.OrderActions.OrderUpdates|undefined} value
 * @return {!proto.bigblue.common.OrderActions} returns this
*/
proto.bigblue.common.OrderActions.prototype.setOrderUpdates = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bigblue.common.OrderActions} returns this
 */
proto.bigblue.common.OrderActions.prototype.clearOrderUpdates = function() {
  return this.setOrderUpdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bigblue.common.OrderActions.prototype.hasOrderUpdates = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, FulfillmentUpdates> fulfillment_updateses = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bigblue.common.OrderActions.FulfillmentUpdates>}
 */
proto.bigblue.common.OrderActions.prototype.getFulfillmentUpdatesesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bigblue.common.OrderActions.FulfillmentUpdates>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.bigblue.common.OrderActions.FulfillmentUpdates));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bigblue.common.OrderActions} returns this
 */
proto.bigblue.common.OrderActions.prototype.clearFulfillmentUpdatesesMap = function() {
  this.getFulfillmentUpdatesesMap().clear();
  return this;
};


/**
 * map<string, FulfillmentReads> fulfillment_reads = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.bigblue.common.OrderActions.FulfillmentReads>}
 */
proto.bigblue.common.OrderActions.prototype.getFulfillmentReadsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.bigblue.common.OrderActions.FulfillmentReads>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.bigblue.common.OrderActions.FulfillmentReads));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.bigblue.common.OrderActions} returns this
 */
proto.bigblue.common.OrderActions.prototype.clearFulfillmentReadsMap = function() {
  this.getFulfillmentReadsMap().clear();
  return this;
};


goog.object.extend(exports, proto.bigblue.common);

