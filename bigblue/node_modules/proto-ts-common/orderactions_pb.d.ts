// package: bigblue.common
// file: bigblue/common/orderactions.proto

import * as jspb from "google-protobuf";

export class OrderActions extends jspb.Message {
  hasOrderUpdates(): boolean;
  clearOrderUpdates(): void;
  getOrderUpdates(): OrderActions.OrderUpdates | undefined;
  setOrderUpdates(value?: OrderActions.OrderUpdates): void;

  getFulfillmentUpdatesesMap(): jspb.Map<string, OrderActions.FulfillmentUpdates>;
  clearFulfillmentUpdatesesMap(): void;
  getFulfillmentReadsMap(): jspb.Map<string, OrderActions.FulfillmentReads>;
  clearFulfillmentReadsMap(): void;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): OrderActions.AsObject;
  static toObject(includeInstance: boolean, msg: OrderActions): OrderActions.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: OrderActions, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): OrderActions;
  static deserializeBinaryFromReader(message: OrderActions, reader: jspb.BinaryReader): OrderActions;
}

export namespace OrderActions {
  export type AsObject = {
    orderUpdates?: OrderActions.OrderUpdates.AsObject,
    fulfillmentUpdatesesMap: Array<[string, OrderActions.FulfillmentUpdates.AsObject]>,
    fulfillmentReadsMap: Array<[string, OrderActions.FulfillmentReads.AsObject]>,
  }

  export class OrderUpdates extends jspb.Message {
    getCustomer(): boolean;
    setCustomer(value: boolean): void;

    getDestination(): boolean;
    setDestination(value: boolean): void;

    clearLineItemsList(): void;
    getLineItemsList(): Array<string>;
    setLineItemsList(value: Array<string>): void;
    addLineItems(value: string, index?: number): string;

    getPrices(): boolean;
    setPrices(value: boolean): void;

    getBillingAddress(): boolean;
    setBillingAddress(value: boolean): void;

    getPreparationInstructions(): boolean;
    setPreparationInstructions(value: boolean): void;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): OrderUpdates.AsObject;
    static toObject(includeInstance: boolean, msg: OrderUpdates): OrderUpdates.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: OrderUpdates, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): OrderUpdates;
    static deserializeBinaryFromReader(message: OrderUpdates, reader: jspb.BinaryReader): OrderUpdates;
  }

  export namespace OrderUpdates {
    export type AsObject = {
      customer: boolean,
      destination: boolean,
      lineItemsList: Array<string>,
      prices: boolean,
      billingAddress: boolean,
      preparationInstructions: boolean,
    }
  }

  export class FulfillmentReads extends jspb.Message {
    getPackingListData(): boolean;
    setPackingListData(value: boolean): void;

    getPackingListDocument(): boolean;
    setPackingListDocument(value: boolean): void;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): FulfillmentReads.AsObject;
    static toObject(includeInstance: boolean, msg: FulfillmentReads): FulfillmentReads.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: FulfillmentReads, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): FulfillmentReads;
    static deserializeBinaryFromReader(message: FulfillmentReads, reader: jspb.BinaryReader): FulfillmentReads;
  }

  export namespace FulfillmentReads {
    export type AsObject = {
      packingListData: boolean,
      packingListDocument: boolean,
    }
  }

  export class FulfillmentUpdates extends jspb.Message {
    getCarrierService(): boolean;
    setCarrierService(value: boolean): void;

    getPriority(): boolean;
    setPriority(value: boolean): void;

    getCancel(): boolean;
    setCancel(value: boolean): void;

    serializeBinary(): Uint8Array;
    toObject(includeInstance?: boolean): FulfillmentUpdates.AsObject;
    static toObject(includeInstance: boolean, msg: FulfillmentUpdates): FulfillmentUpdates.AsObject;
    static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
    static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
    static serializeBinaryToWriter(message: FulfillmentUpdates, writer: jspb.BinaryWriter): void;
    static deserializeBinary(bytes: Uint8Array): FulfillmentUpdates;
    static deserializeBinaryFromReader(message: FulfillmentUpdates, reader: jspb.BinaryReader): FulfillmentUpdates;
  }

  export namespace FulfillmentUpdates {
    export type AsObject = {
      carrierService: boolean,
      priority: boolean,
      cancel: boolean,
    }
  }
}


