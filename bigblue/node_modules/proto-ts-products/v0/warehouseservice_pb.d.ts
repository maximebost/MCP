// package: bigblue.products.v0
// file: bigblue/products/v0/warehouseservice.proto

import * as jspb from "google-protobuf";
import * as bigblue_products_v0_packunit_pb from "./packunit_pb";
import * as bigblue_products_v0_product_pb from "./product_pb";
import * as google_protobuf_empty_pb from "google-protobuf/google/protobuf/empty_pb";

export class WarehouseGetProductRequest extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): WarehouseGetProductRequest.AsObject;
  static toObject(includeInstance: boolean, msg: WarehouseGetProductRequest): WarehouseGetProductRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: WarehouseGetProductRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): WarehouseGetProductRequest;
  static deserializeBinaryFromReader(message: WarehouseGetProductRequest, reader: jspb.BinaryReader): WarehouseGetProductRequest;
}

export namespace WarehouseGetProductRequest {
  export type AsObject = {
    id: string,
  }
}

export class WarehouseBatchUpdateProductMeasuresRequest extends jspb.Message {
  clearProductsList(): void;
  getProductsList(): Array<bigblue_products_v0_product_pb.ProductForm>;
  setProductsList(value: Array<bigblue_products_v0_product_pb.ProductForm>): void;
  addProducts(value?: bigblue_products_v0_product_pb.ProductForm, index?: number): bigblue_products_v0_product_pb.ProductForm;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): WarehouseBatchUpdateProductMeasuresRequest.AsObject;
  static toObject(includeInstance: boolean, msg: WarehouseBatchUpdateProductMeasuresRequest): WarehouseBatchUpdateProductMeasuresRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: WarehouseBatchUpdateProductMeasuresRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): WarehouseBatchUpdateProductMeasuresRequest;
  static deserializeBinaryFromReader(message: WarehouseBatchUpdateProductMeasuresRequest, reader: jspb.BinaryReader): WarehouseBatchUpdateProductMeasuresRequest;
}

export namespace WarehouseBatchUpdateProductMeasuresRequest {
  export type AsObject = {
    productsList: Array<bigblue_products_v0_product_pb.ProductForm.AsObject>,
  }
}

export class WarehouseListMarketingInsertProductsRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): WarehouseListMarketingInsertProductsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: WarehouseListMarketingInsertProductsRequest): WarehouseListMarketingInsertProductsRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: WarehouseListMarketingInsertProductsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): WarehouseListMarketingInsertProductsRequest;
  static deserializeBinaryFromReader(message: WarehouseListMarketingInsertProductsRequest, reader: jspb.BinaryReader): WarehouseListMarketingInsertProductsRequest;
}

export namespace WarehouseListMarketingInsertProductsRequest {
  export type AsObject = {
  }
}

export class WarehouseListMarketingInsertProductsResponse extends jspb.Message {
  clearProductsList(): void;
  getProductsList(): Array<bigblue_products_v0_product_pb.Product>;
  setProductsList(value: Array<bigblue_products_v0_product_pb.Product>): void;
  addProducts(value?: bigblue_products_v0_product_pb.Product, index?: number): bigblue_products_v0_product_pb.Product;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): WarehouseListMarketingInsertProductsResponse.AsObject;
  static toObject(includeInstance: boolean, msg: WarehouseListMarketingInsertProductsResponse): WarehouseListMarketingInsertProductsResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: WarehouseListMarketingInsertProductsResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): WarehouseListMarketingInsertProductsResponse;
  static deserializeBinaryFromReader(message: WarehouseListMarketingInsertProductsResponse, reader: jspb.BinaryReader): WarehouseListMarketingInsertProductsResponse;
}

export namespace WarehouseListMarketingInsertProductsResponse {
  export type AsObject = {
    productsList: Array<bigblue_products_v0_product_pb.Product.AsObject>,
  }
}

export class WarehouseListProductPackUnitsRequest extends jspb.Message {
  getProduct(): string;
  setProduct(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): WarehouseListProductPackUnitsRequest.AsObject;
  static toObject(includeInstance: boolean, msg: WarehouseListProductPackUnitsRequest): WarehouseListProductPackUnitsRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: WarehouseListProductPackUnitsRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): WarehouseListProductPackUnitsRequest;
  static deserializeBinaryFromReader(message: WarehouseListProductPackUnitsRequest, reader: jspb.BinaryReader): WarehouseListProductPackUnitsRequest;
}

export namespace WarehouseListProductPackUnitsRequest {
  export type AsObject = {
    product: string,
  }
}

export class WarehouseListProductPackUnitsResponse extends jspb.Message {
  clearProductPackUnitsList(): void;
  getProductPackUnitsList(): Array<bigblue_products_v0_packunit_pb.ProductPackUnit>;
  setProductPackUnitsList(value: Array<bigblue_products_v0_packunit_pb.ProductPackUnit>): void;
  addProductPackUnits(value?: bigblue_products_v0_packunit_pb.ProductPackUnit, index?: number): bigblue_products_v0_packunit_pb.ProductPackUnit;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): WarehouseListProductPackUnitsResponse.AsObject;
  static toObject(includeInstance: boolean, msg: WarehouseListProductPackUnitsResponse): WarehouseListProductPackUnitsResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: WarehouseListProductPackUnitsResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): WarehouseListProductPackUnitsResponse;
  static deserializeBinaryFromReader(message: WarehouseListProductPackUnitsResponse, reader: jspb.BinaryReader): WarehouseListProductPackUnitsResponse;
}

export namespace WarehouseListProductPackUnitsResponse {
  export type AsObject = {
    productPackUnitsList: Array<bigblue_products_v0_packunit_pb.ProductPackUnit.AsObject>,
  }
}


