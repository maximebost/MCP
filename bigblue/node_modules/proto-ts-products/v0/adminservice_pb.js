// source: bigblue/products/v0/adminservice.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var bigblue_products_v0_container_pb = require('./container_pb.js');
goog.object.extend(proto, bigblue_products_v0_container_pb);
var bigblue_products_v0_product_pb = require('./product_pb.js');
goog.object.extend(proto, bigblue_products_v0_product_pb);
goog.exportSymbol('proto.bigblue.products.v0.AdminDeleteContainerRequest', null, global);
goog.exportSymbol('proto.bigblue.products.v0.AdminDeleteContainerResponse', null, global);
goog.exportSymbol('proto.bigblue.products.v0.AdminUpdateProductRequest', null, global);
goog.exportSymbol('proto.bigblue.products.v0.AdminUpdateSettingsRequest', null, global);
goog.exportSymbol('proto.bigblue.products.v0.AdminUpdateSettingsResponse', null, global);
goog.exportSymbol('proto.bigblue.products.v0.AdminUpsertContainerRequest', null, global);
goog.exportSymbol('proto.bigblue.products.v0.AdminUpsertContainerResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bigblue.products.v0.AdminUpdateProductRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bigblue.products.v0.AdminUpdateProductRequest.repeatedFields_, null);
};
goog.inherits(proto.bigblue.products.v0.AdminUpdateProductRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bigblue.products.v0.AdminUpdateProductRequest.displayName = 'proto.bigblue.products.v0.AdminUpdateProductRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bigblue.products.v0.AdminUpdateSettingsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bigblue.products.v0.AdminUpdateSettingsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bigblue.products.v0.AdminUpdateSettingsRequest.displayName = 'proto.bigblue.products.v0.AdminUpdateSettingsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bigblue.products.v0.AdminUpsertContainerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bigblue.products.v0.AdminUpsertContainerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bigblue.products.v0.AdminUpsertContainerRequest.displayName = 'proto.bigblue.products.v0.AdminUpsertContainerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bigblue.products.v0.AdminUpsertContainerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bigblue.products.v0.AdminUpsertContainerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bigblue.products.v0.AdminUpsertContainerResponse.displayName = 'proto.bigblue.products.v0.AdminUpsertContainerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bigblue.products.v0.AdminDeleteContainerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bigblue.products.v0.AdminDeleteContainerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bigblue.products.v0.AdminDeleteContainerRequest.displayName = 'proto.bigblue.products.v0.AdminDeleteContainerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bigblue.products.v0.AdminDeleteContainerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bigblue.products.v0.AdminDeleteContainerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bigblue.products.v0.AdminDeleteContainerResponse.displayName = 'proto.bigblue.products.v0.AdminDeleteContainerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bigblue.products.v0.AdminUpdateSettingsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bigblue.products.v0.AdminUpdateSettingsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bigblue.products.v0.AdminUpdateSettingsResponse.displayName = 'proto.bigblue.products.v0.AdminUpdateSettingsResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bigblue.products.v0.AdminUpdateProductRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bigblue.products.v0.AdminUpdateProductRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    product: (f = msg.getProduct()) && bigblue_products_v0_product_pb.ProductForm.toObject(includeInstance, f),
    updateMaskList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    skipBarcodeValidation: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    skipBarcodeUnicity: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bigblue.products.v0.AdminUpdateProductRequest}
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bigblue.products.v0.AdminUpdateProductRequest;
  return proto.bigblue.products.v0.AdminUpdateProductRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bigblue.products.v0.AdminUpdateProductRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bigblue.products.v0.AdminUpdateProductRequest}
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bigblue_products_v0_product_pb.ProductForm;
      reader.readMessage(value,bigblue_products_v0_product_pb.ProductForm.deserializeBinaryFromReader);
      msg.setProduct(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addUpdateMask(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSkipBarcodeValidation(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSkipBarcodeUnicity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bigblue.products.v0.AdminUpdateProductRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bigblue.products.v0.AdminUpdateProductRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProduct();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bigblue_products_v0_product_pb.ProductForm.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMaskList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getSkipBarcodeValidation();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSkipBarcodeUnicity();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional ProductForm product = 1;
 * @return {?proto.bigblue.products.v0.ProductForm}
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.prototype.getProduct = function() {
  return /** @type{?proto.bigblue.products.v0.ProductForm} */ (
    jspb.Message.getWrapperField(this, bigblue_products_v0_product_pb.ProductForm, 1));
};


/**
 * @param {?proto.bigblue.products.v0.ProductForm|undefined} value
 * @return {!proto.bigblue.products.v0.AdminUpdateProductRequest} returns this
*/
proto.bigblue.products.v0.AdminUpdateProductRequest.prototype.setProduct = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bigblue.products.v0.AdminUpdateProductRequest} returns this
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.prototype.clearProduct = function() {
  return this.setProduct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.prototype.hasProduct = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string update_mask = 2;
 * @return {!Array<string>}
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.prototype.getUpdateMaskList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.bigblue.products.v0.AdminUpdateProductRequest} returns this
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.prototype.setUpdateMaskList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.bigblue.products.v0.AdminUpdateProductRequest} returns this
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.prototype.addUpdateMask = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bigblue.products.v0.AdminUpdateProductRequest} returns this
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.prototype.clearUpdateMaskList = function() {
  return this.setUpdateMaskList([]);
};


/**
 * optional bool skip_barcode_validation = 3;
 * @return {boolean}
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.prototype.getSkipBarcodeValidation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bigblue.products.v0.AdminUpdateProductRequest} returns this
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.prototype.setSkipBarcodeValidation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool skip_barcode_unicity = 4;
 * @return {boolean}
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.prototype.getSkipBarcodeUnicity = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bigblue.products.v0.AdminUpdateProductRequest} returns this
 */
proto.bigblue.products.v0.AdminUpdateProductRequest.prototype.setSkipBarcodeUnicity = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bigblue.products.v0.AdminUpdateSettingsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bigblue.products.v0.AdminUpdateSettingsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bigblue.products.v0.AdminUpdateSettingsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.AdminUpdateSettingsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    settings: (f = msg.getSettings()) && bigblue_products_v0_product_pb.Settings.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bigblue.products.v0.AdminUpdateSettingsRequest}
 */
proto.bigblue.products.v0.AdminUpdateSettingsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bigblue.products.v0.AdminUpdateSettingsRequest;
  return proto.bigblue.products.v0.AdminUpdateSettingsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bigblue.products.v0.AdminUpdateSettingsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bigblue.products.v0.AdminUpdateSettingsRequest}
 */
proto.bigblue.products.v0.AdminUpdateSettingsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bigblue_products_v0_product_pb.Settings;
      reader.readMessage(value,bigblue_products_v0_product_pb.Settings.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bigblue.products.v0.AdminUpdateSettingsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bigblue.products.v0.AdminUpdateSettingsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bigblue.products.v0.AdminUpdateSettingsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.AdminUpdateSettingsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bigblue_products_v0_product_pb.Settings.serializeBinaryToWriter
    );
  }
};


/**
 * optional Settings settings = 1;
 * @return {?proto.bigblue.products.v0.Settings}
 */
proto.bigblue.products.v0.AdminUpdateSettingsRequest.prototype.getSettings = function() {
  return /** @type{?proto.bigblue.products.v0.Settings} */ (
    jspb.Message.getWrapperField(this, bigblue_products_v0_product_pb.Settings, 1));
};


/**
 * @param {?proto.bigblue.products.v0.Settings|undefined} value
 * @return {!proto.bigblue.products.v0.AdminUpdateSettingsRequest} returns this
*/
proto.bigblue.products.v0.AdminUpdateSettingsRequest.prototype.setSettings = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bigblue.products.v0.AdminUpdateSettingsRequest} returns this
 */
proto.bigblue.products.v0.AdminUpdateSettingsRequest.prototype.clearSettings = function() {
  return this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bigblue.products.v0.AdminUpdateSettingsRequest.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bigblue.products.v0.AdminUpsertContainerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bigblue.products.v0.AdminUpsertContainerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bigblue.products.v0.AdminUpsertContainerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.AdminUpsertContainerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    container: (f = msg.getContainer()) && bigblue_products_v0_container_pb.Container.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bigblue.products.v0.AdminUpsertContainerRequest}
 */
proto.bigblue.products.v0.AdminUpsertContainerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bigblue.products.v0.AdminUpsertContainerRequest;
  return proto.bigblue.products.v0.AdminUpsertContainerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bigblue.products.v0.AdminUpsertContainerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bigblue.products.v0.AdminUpsertContainerRequest}
 */
proto.bigblue.products.v0.AdminUpsertContainerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bigblue_products_v0_container_pb.Container;
      reader.readMessage(value,bigblue_products_v0_container_pb.Container.deserializeBinaryFromReader);
      msg.setContainer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bigblue.products.v0.AdminUpsertContainerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bigblue.products.v0.AdminUpsertContainerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bigblue.products.v0.AdminUpsertContainerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.AdminUpsertContainerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bigblue_products_v0_container_pb.Container.serializeBinaryToWriter
    );
  }
};


/**
 * optional Container container = 1;
 * @return {?proto.bigblue.products.v0.Container}
 */
proto.bigblue.products.v0.AdminUpsertContainerRequest.prototype.getContainer = function() {
  return /** @type{?proto.bigblue.products.v0.Container} */ (
    jspb.Message.getWrapperField(this, bigblue_products_v0_container_pb.Container, 1));
};


/**
 * @param {?proto.bigblue.products.v0.Container|undefined} value
 * @return {!proto.bigblue.products.v0.AdminUpsertContainerRequest} returns this
*/
proto.bigblue.products.v0.AdminUpsertContainerRequest.prototype.setContainer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bigblue.products.v0.AdminUpsertContainerRequest} returns this
 */
proto.bigblue.products.v0.AdminUpsertContainerRequest.prototype.clearContainer = function() {
  return this.setContainer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bigblue.products.v0.AdminUpsertContainerRequest.prototype.hasContainer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bigblue.products.v0.AdminUpsertContainerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bigblue.products.v0.AdminUpsertContainerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bigblue.products.v0.AdminUpsertContainerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.AdminUpsertContainerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    container: (f = msg.getContainer()) && bigblue_products_v0_container_pb.Container.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bigblue.products.v0.AdminUpsertContainerResponse}
 */
proto.bigblue.products.v0.AdminUpsertContainerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bigblue.products.v0.AdminUpsertContainerResponse;
  return proto.bigblue.products.v0.AdminUpsertContainerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bigblue.products.v0.AdminUpsertContainerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bigblue.products.v0.AdminUpsertContainerResponse}
 */
proto.bigblue.products.v0.AdminUpsertContainerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bigblue_products_v0_container_pb.Container;
      reader.readMessage(value,bigblue_products_v0_container_pb.Container.deserializeBinaryFromReader);
      msg.setContainer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bigblue.products.v0.AdminUpsertContainerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bigblue.products.v0.AdminUpsertContainerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bigblue.products.v0.AdminUpsertContainerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.AdminUpsertContainerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bigblue_products_v0_container_pb.Container.serializeBinaryToWriter
    );
  }
};


/**
 * optional Container container = 1;
 * @return {?proto.bigblue.products.v0.Container}
 */
proto.bigblue.products.v0.AdminUpsertContainerResponse.prototype.getContainer = function() {
  return /** @type{?proto.bigblue.products.v0.Container} */ (
    jspb.Message.getWrapperField(this, bigblue_products_v0_container_pb.Container, 1));
};


/**
 * @param {?proto.bigblue.products.v0.Container|undefined} value
 * @return {!proto.bigblue.products.v0.AdminUpsertContainerResponse} returns this
*/
proto.bigblue.products.v0.AdminUpsertContainerResponse.prototype.setContainer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bigblue.products.v0.AdminUpsertContainerResponse} returns this
 */
proto.bigblue.products.v0.AdminUpsertContainerResponse.prototype.clearContainer = function() {
  return this.setContainer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bigblue.products.v0.AdminUpsertContainerResponse.prototype.hasContainer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bigblue.products.v0.AdminDeleteContainerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bigblue.products.v0.AdminDeleteContainerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bigblue.products.v0.AdminDeleteContainerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.AdminDeleteContainerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    product: jspb.Message.getFieldWithDefault(msg, 1, ""),
    containerType: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bigblue.products.v0.AdminDeleteContainerRequest}
 */
proto.bigblue.products.v0.AdminDeleteContainerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bigblue.products.v0.AdminDeleteContainerRequest;
  return proto.bigblue.products.v0.AdminDeleteContainerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bigblue.products.v0.AdminDeleteContainerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bigblue.products.v0.AdminDeleteContainerRequest}
 */
proto.bigblue.products.v0.AdminDeleteContainerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProduct(value);
      break;
    case 2:
      var value = /** @type {!proto.bigblue.products.v0.ContainerType} */ (reader.readEnum());
      msg.setContainerType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bigblue.products.v0.AdminDeleteContainerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bigblue.products.v0.AdminDeleteContainerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bigblue.products.v0.AdminDeleteContainerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.AdminDeleteContainerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProduct();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContainerType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string product = 1;
 * @return {string}
 */
proto.bigblue.products.v0.AdminDeleteContainerRequest.prototype.getProduct = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bigblue.products.v0.AdminDeleteContainerRequest} returns this
 */
proto.bigblue.products.v0.AdminDeleteContainerRequest.prototype.setProduct = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ContainerType container_type = 2;
 * @return {!proto.bigblue.products.v0.ContainerType}
 */
proto.bigblue.products.v0.AdminDeleteContainerRequest.prototype.getContainerType = function() {
  return /** @type {!proto.bigblue.products.v0.ContainerType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bigblue.products.v0.ContainerType} value
 * @return {!proto.bigblue.products.v0.AdminDeleteContainerRequest} returns this
 */
proto.bigblue.products.v0.AdminDeleteContainerRequest.prototype.setContainerType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bigblue.products.v0.AdminDeleteContainerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bigblue.products.v0.AdminDeleteContainerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bigblue.products.v0.AdminDeleteContainerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.AdminDeleteContainerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bigblue.products.v0.AdminDeleteContainerResponse}
 */
proto.bigblue.products.v0.AdminDeleteContainerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bigblue.products.v0.AdminDeleteContainerResponse;
  return proto.bigblue.products.v0.AdminDeleteContainerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bigblue.products.v0.AdminDeleteContainerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bigblue.products.v0.AdminDeleteContainerResponse}
 */
proto.bigblue.products.v0.AdminDeleteContainerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bigblue.products.v0.AdminDeleteContainerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bigblue.products.v0.AdminDeleteContainerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bigblue.products.v0.AdminDeleteContainerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.AdminDeleteContainerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bigblue.products.v0.AdminUpdateSettingsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bigblue.products.v0.AdminUpdateSettingsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bigblue.products.v0.AdminUpdateSettingsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.AdminUpdateSettingsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    settings: (f = msg.getSettings()) && bigblue_products_v0_product_pb.Settings.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bigblue.products.v0.AdminUpdateSettingsResponse}
 */
proto.bigblue.products.v0.AdminUpdateSettingsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bigblue.products.v0.AdminUpdateSettingsResponse;
  return proto.bigblue.products.v0.AdminUpdateSettingsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bigblue.products.v0.AdminUpdateSettingsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bigblue.products.v0.AdminUpdateSettingsResponse}
 */
proto.bigblue.products.v0.AdminUpdateSettingsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new bigblue_products_v0_product_pb.Settings;
      reader.readMessage(value,bigblue_products_v0_product_pb.Settings.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bigblue.products.v0.AdminUpdateSettingsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bigblue.products.v0.AdminUpdateSettingsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bigblue.products.v0.AdminUpdateSettingsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.AdminUpdateSettingsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      bigblue_products_v0_product_pb.Settings.serializeBinaryToWriter
    );
  }
};


/**
 * optional Settings settings = 1;
 * @return {?proto.bigblue.products.v0.Settings}
 */
proto.bigblue.products.v0.AdminUpdateSettingsResponse.prototype.getSettings = function() {
  return /** @type{?proto.bigblue.products.v0.Settings} */ (
    jspb.Message.getWrapperField(this, bigblue_products_v0_product_pb.Settings, 1));
};


/**
 * @param {?proto.bigblue.products.v0.Settings|undefined} value
 * @return {!proto.bigblue.products.v0.AdminUpdateSettingsResponse} returns this
*/
proto.bigblue.products.v0.AdminUpdateSettingsResponse.prototype.setSettings = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bigblue.products.v0.AdminUpdateSettingsResponse} returns this
 */
proto.bigblue.products.v0.AdminUpdateSettingsResponse.prototype.clearSettings = function() {
  return this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bigblue.products.v0.AdminUpdateSettingsResponse.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.bigblue.products.v0);

