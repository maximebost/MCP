// package: bigblue.products.v0
// file: bigblue/products/v0/packunit.proto

import * as jspb from "google-protobuf";
import * as bigblue_common_event_pb from "proto-ts-common/event_pb";

export class ProductPackUnit extends jspb.Message {
  getProduct(): string;
  setProduct(value: string): void;

  getBaseUnitQuantity(): number;
  setBaseUnitQuantity(value: number): void;

  getBarcode(): string;
  setBarcode(value: string): void;

  hasInnerContent(): boolean;
  clearInnerContent(): void;
  getInnerContent(): ProductPackUnitInnerContent | undefined;
  setInnerContent(value?: ProductPackUnitInnerContent): void;

  getCreateTime(): string;
  setCreateTime(value: string): void;

  getUpdateTime(): string;
  setUpdateTime(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ProductPackUnit.AsObject;
  static toObject(includeInstance: boolean, msg: ProductPackUnit): ProductPackUnit.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ProductPackUnit, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ProductPackUnit;
  static deserializeBinaryFromReader(message: ProductPackUnit, reader: jspb.BinaryReader): ProductPackUnit;
}

export namespace ProductPackUnit {
  export type AsObject = {
    product: string,
    baseUnitQuantity: number,
    barcode: string,
    innerContent?: ProductPackUnitInnerContent.AsObject,
    createTime: string,
    updateTime: string,
  }
}

export class ProductPackUnitInnerContent extends jspb.Message {
  getProductPackBaseUnitQuantity(): number;
  setProductPackBaseUnitQuantity(value: number): void;

  getQuantity(): number;
  setQuantity(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ProductPackUnitInnerContent.AsObject;
  static toObject(includeInstance: boolean, msg: ProductPackUnitInnerContent): ProductPackUnitInnerContent.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ProductPackUnitInnerContent, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ProductPackUnitInnerContent;
  static deserializeBinaryFromReader(message: ProductPackUnitInnerContent, reader: jspb.BinaryReader): ProductPackUnitInnerContent;
}

export namespace ProductPackUnitInnerContent {
  export type AsObject = {
    productPackBaseUnitQuantity: number,
    quantity: number,
  }
}

export class ProductPackUnitVersion extends jspb.Message {
  getCorrelationId(): string;
  setCorrelationId(value: string): void;

  getCreateTime(): string;
  setCreateTime(value: string): void;

  getHash(): number;
  setHash(value: number): void;

  getChangeType(): bigblue_common_event_pb.ChangeTypeMap[keyof bigblue_common_event_pb.ChangeTypeMap];
  setChangeType(value: bigblue_common_event_pb.ChangeTypeMap[keyof bigblue_common_event_pb.ChangeTypeMap]): void;

  hasProductPackUnit(): boolean;
  clearProductPackUnit(): void;
  getProductPackUnit(): ProductPackUnit | undefined;
  setProductPackUnit(value?: ProductPackUnit): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ProductPackUnitVersion.AsObject;
  static toObject(includeInstance: boolean, msg: ProductPackUnitVersion): ProductPackUnitVersion.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ProductPackUnitVersion, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ProductPackUnitVersion;
  static deserializeBinaryFromReader(message: ProductPackUnitVersion, reader: jspb.BinaryReader): ProductPackUnitVersion;
}

export namespace ProductPackUnitVersion {
  export type AsObject = {
    correlationId: string,
    createTime: string,
    hash: number,
    changeType: bigblue_common_event_pb.ChangeTypeMap[keyof bigblue_common_event_pb.ChangeTypeMap],
    productPackUnit?: ProductPackUnit.AsObject,
  }
}


