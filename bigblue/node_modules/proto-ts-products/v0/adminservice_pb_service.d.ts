// package: bigblue.products.v0
// file: bigblue/products/v0/adminservice.proto

import * as bigblue_products_v0_adminservice_pb from "./adminservice_pb";
import * as bigblue_products_v0_product_pb from "./product_pb";
import {grpc} from "@improbable-eng/grpc-web";

type AdminServiceUpdateProduct = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof bigblue_products_v0_adminservice_pb.AdminUpdateProductRequest;
  readonly responseType: typeof bigblue_products_v0_product_pb.Product;
};

type AdminServiceUpsertContainer = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof bigblue_products_v0_adminservice_pb.AdminUpsertContainerRequest;
  readonly responseType: typeof bigblue_products_v0_adminservice_pb.AdminUpsertContainerResponse;
};

type AdminServiceDeleteContainer = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof bigblue_products_v0_adminservice_pb.AdminDeleteContainerRequest;
  readonly responseType: typeof bigblue_products_v0_adminservice_pb.AdminDeleteContainerResponse;
};

type AdminServiceUpdateSettings = {
  readonly methodName: string;
  readonly service: typeof AdminService;
  readonly requestStream: false;
  readonly responseStream: false;
  readonly requestType: typeof bigblue_products_v0_adminservice_pb.AdminUpdateSettingsRequest;
  readonly responseType: typeof bigblue_products_v0_adminservice_pb.AdminUpdateSettingsResponse;
};

export class AdminService {
  static readonly serviceName: string;
  static readonly UpdateProduct: AdminServiceUpdateProduct;
  static readonly UpsertContainer: AdminServiceUpsertContainer;
  static readonly DeleteContainer: AdminServiceDeleteContainer;
  static readonly UpdateSettings: AdminServiceUpdateSettings;
}

export type ServiceError = { message: string, code: number; metadata: grpc.Metadata }
export type Status = { details: string, code: number; metadata: grpc.Metadata }

interface UnaryResponse {
  cancel(): void;
}
interface ResponseStream<T> {
  cancel(): void;
  on(type: 'data', handler: (message: T) => void): ResponseStream<T>;
  on(type: 'end', handler: (status?: Status) => void): ResponseStream<T>;
  on(type: 'status', handler: (status: Status) => void): ResponseStream<T>;
}
interface RequestStream<T> {
  write(message: T): RequestStream<T>;
  end(): void;
  cancel(): void;
  on(type: 'end', handler: (status?: Status) => void): RequestStream<T>;
  on(type: 'status', handler: (status: Status) => void): RequestStream<T>;
}
interface BidirectionalStream<ReqT, ResT> {
  write(message: ReqT): BidirectionalStream<ReqT, ResT>;
  end(): void;
  cancel(): void;
  on(type: 'data', handler: (message: ResT) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'end', handler: (status?: Status) => void): BidirectionalStream<ReqT, ResT>;
  on(type: 'status', handler: (status: Status) => void): BidirectionalStream<ReqT, ResT>;
}

export class AdminServiceClient {
  readonly serviceHost: string;

  constructor(serviceHost: string, options?: grpc.RpcOptions);
  updateProduct(
    requestMessage: bigblue_products_v0_adminservice_pb.AdminUpdateProductRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: bigblue_products_v0_product_pb.Product|null) => void
  ): UnaryResponse;
  updateProduct(
    requestMessage: bigblue_products_v0_adminservice_pb.AdminUpdateProductRequest,
    callback: (error: ServiceError|null, responseMessage: bigblue_products_v0_product_pb.Product|null) => void
  ): UnaryResponse;
  upsertContainer(
    requestMessage: bigblue_products_v0_adminservice_pb.AdminUpsertContainerRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: bigblue_products_v0_adminservice_pb.AdminUpsertContainerResponse|null) => void
  ): UnaryResponse;
  upsertContainer(
    requestMessage: bigblue_products_v0_adminservice_pb.AdminUpsertContainerRequest,
    callback: (error: ServiceError|null, responseMessage: bigblue_products_v0_adminservice_pb.AdminUpsertContainerResponse|null) => void
  ): UnaryResponse;
  deleteContainer(
    requestMessage: bigblue_products_v0_adminservice_pb.AdminDeleteContainerRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: bigblue_products_v0_adminservice_pb.AdminDeleteContainerResponse|null) => void
  ): UnaryResponse;
  deleteContainer(
    requestMessage: bigblue_products_v0_adminservice_pb.AdminDeleteContainerRequest,
    callback: (error: ServiceError|null, responseMessage: bigblue_products_v0_adminservice_pb.AdminDeleteContainerResponse|null) => void
  ): UnaryResponse;
  updateSettings(
    requestMessage: bigblue_products_v0_adminservice_pb.AdminUpdateSettingsRequest,
    metadata: grpc.Metadata,
    callback: (error: ServiceError|null, responseMessage: bigblue_products_v0_adminservice_pb.AdminUpdateSettingsResponse|null) => void
  ): UnaryResponse;
  updateSettings(
    requestMessage: bigblue_products_v0_adminservice_pb.AdminUpdateSettingsRequest,
    callback: (error: ServiceError|null, responseMessage: bigblue_products_v0_adminservice_pb.AdminUpdateSettingsResponse|null) => void
  ): UnaryResponse;
}


