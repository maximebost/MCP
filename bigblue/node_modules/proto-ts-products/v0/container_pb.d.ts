// package: bigblue.products.v0
// file: bigblue/products/v0/container.proto

import * as jspb from "google-protobuf";
import * as bigblue_common_event_pb from "proto-ts-common/event_pb";

export class Container extends jspb.Message {
  getProduct(): string;
  setProduct(value: string): void;

  getContainerType(): ContainerTypeMap[keyof ContainerTypeMap];
  setContainerType(value: ContainerTypeMap[keyof ContainerTypeMap]): void;

  getQuantity(): number;
  setQuantity(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): Container.AsObject;
  static toObject(includeInstance: boolean, msg: Container): Container.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: Container, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): Container;
  static deserializeBinaryFromReader(message: Container, reader: jspb.BinaryReader): Container;
}

export namespace Container {
  export type AsObject = {
    product: string,
    containerType: ContainerTypeMap[keyof ContainerTypeMap],
    quantity: number,
  }
}

export class ContainerVersion extends jspb.Message {
  getCorrelationId(): string;
  setCorrelationId(value: string): void;

  getCreateTime(): string;
  setCreateTime(value: string): void;

  getHash(): number;
  setHash(value: number): void;

  getChangeType(): bigblue_common_event_pb.ChangeTypeMap[keyof bigblue_common_event_pb.ChangeTypeMap];
  setChangeType(value: bigblue_common_event_pb.ChangeTypeMap[keyof bigblue_common_event_pb.ChangeTypeMap]): void;

  hasContainer(): boolean;
  clearContainer(): void;
  getContainer(): Container | undefined;
  setContainer(value?: Container): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ContainerVersion.AsObject;
  static toObject(includeInstance: boolean, msg: ContainerVersion): ContainerVersion.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ContainerVersion, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ContainerVersion;
  static deserializeBinaryFromReader(message: ContainerVersion, reader: jspb.BinaryReader): ContainerVersion;
}

export namespace ContainerVersion {
  export type AsObject = {
    correlationId: string,
    createTime: string,
    hash: number,
    changeType: bigblue_common_event_pb.ChangeTypeMap[keyof bigblue_common_event_pb.ChangeTypeMap],
    container?: Container.AsObject,
  }
}

export interface ContainerTypeMap {
  CONTAINER_TYPE_UNSPECIFIED: 0;
  CONTAINER_INNER_BOX: 3;
  CONTAINER_BOX: 1;
  CONTAINER_PALLET: 2;
}

export const ContainerType: ContainerTypeMap;


