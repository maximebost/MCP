// package: bigblue.products.v0
// file: bigblue/products/v0/event.proto

import * as jspb from "google-protobuf";
import * as bigblue_products_v0_container_pb from "./container_pb";
import * as bigblue_products_v0_packunit_pb from "./packunit_pb";
import * as bigblue_products_v0_product_pb from "./product_pb";

export class ProductsEvent extends jspb.Message {
  hasProductUpserted(): boolean;
  clearProductUpserted(): void;
  getProductUpserted(): ProductUpserted | undefined;
  setProductUpserted(value?: ProductUpserted): void;

  hasProductDeleted(): boolean;
  clearProductDeleted(): void;
  getProductDeleted(): ProductDeleted | undefined;
  setProductDeleted(value?: ProductDeleted): void;

  hasBundleUpserted(): boolean;
  clearBundleUpserted(): void;
  getBundleUpserted(): BundleUpserted | undefined;
  setBundleUpserted(value?: BundleUpserted): void;

  hasBundleDeleted(): boolean;
  clearBundleDeleted(): void;
  getBundleDeleted(): BundleDeleted | undefined;
  setBundleDeleted(value?: BundleDeleted): void;

  hasContainerUpserted(): boolean;
  clearContainerUpserted(): void;
  getContainerUpserted(): ContainerUpserted | undefined;
  setContainerUpserted(value?: ContainerUpserted): void;

  hasContainerDeleted(): boolean;
  clearContainerDeleted(): void;
  getContainerDeleted(): ContainerDeleted | undefined;
  setContainerDeleted(value?: ContainerDeleted): void;

  hasProductPackUnitUpserted(): boolean;
  clearProductPackUnitUpserted(): void;
  getProductPackUnitUpserted(): ProductPackUnitUpserted | undefined;
  setProductPackUnitUpserted(value?: ProductPackUnitUpserted): void;

  hasProductPackUnitDeleted(): boolean;
  clearProductPackUnitDeleted(): void;
  getProductPackUnitDeleted(): ProductPackUnitDeleted | undefined;
  setProductPackUnitDeleted(value?: ProductPackUnitDeleted): void;

  getEventCase(): ProductsEvent.EventCase;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ProductsEvent.AsObject;
  static toObject(includeInstance: boolean, msg: ProductsEvent): ProductsEvent.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ProductsEvent, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ProductsEvent;
  static deserializeBinaryFromReader(message: ProductsEvent, reader: jspb.BinaryReader): ProductsEvent;
}

export namespace ProductsEvent {
  export type AsObject = {
    productUpserted?: ProductUpserted.AsObject,
    productDeleted?: ProductDeleted.AsObject,
    bundleUpserted?: BundleUpserted.AsObject,
    bundleDeleted?: BundleDeleted.AsObject,
    containerUpserted?: ContainerUpserted.AsObject,
    containerDeleted?: ContainerDeleted.AsObject,
    productPackUnitUpserted?: ProductPackUnitUpserted.AsObject,
    productPackUnitDeleted?: ProductPackUnitDeleted.AsObject,
  }

  export enum EventCase {
    EVENT_NOT_SET = 0,
    PRODUCT_UPSERTED = 1,
    PRODUCT_DELETED = 2,
    BUNDLE_UPSERTED = 3,
    BUNDLE_DELETED = 4,
    CONTAINER_UPSERTED = 5,
    CONTAINER_DELETED = 6,
    PRODUCT_PACK_UNIT_UPSERTED = 7,
    PRODUCT_PACK_UNIT_DELETED = 8,
  }
}

export class ProductUpserted extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  getCorrelationId(): string;
  setCorrelationId(value: string): void;

  getCreateTime(): string;
  setCreateTime(value: string): void;

  getHash(): number;
  setHash(value: number): void;

  getOrganization(): string;
  setOrganization(value: string): void;

  hasProduct(): boolean;
  clearProduct(): void;
  getProduct(): bigblue_products_v0_product_pb.Product | undefined;
  setProduct(value?: bigblue_products_v0_product_pb.Product): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ProductUpserted.AsObject;
  static toObject(includeInstance: boolean, msg: ProductUpserted): ProductUpserted.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ProductUpserted, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ProductUpserted;
  static deserializeBinaryFromReader(message: ProductUpserted, reader: jspb.BinaryReader): ProductUpserted;
}

export namespace ProductUpserted {
  export type AsObject = {
    id: string,
    correlationId: string,
    createTime: string,
    hash: number,
    organization: string,
    product?: bigblue_products_v0_product_pb.Product.AsObject,
  }
}

export class ProductDeleted extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  getCorrelationId(): string;
  setCorrelationId(value: string): void;

  getCreateTime(): string;
  setCreateTime(value: string): void;

  getHash(): number;
  setHash(value: number): void;

  getOrganization(): string;
  setOrganization(value: string): void;

  hasProduct(): boolean;
  clearProduct(): void;
  getProduct(): bigblue_products_v0_product_pb.Product | undefined;
  setProduct(value?: bigblue_products_v0_product_pb.Product): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ProductDeleted.AsObject;
  static toObject(includeInstance: boolean, msg: ProductDeleted): ProductDeleted.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ProductDeleted, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ProductDeleted;
  static deserializeBinaryFromReader(message: ProductDeleted, reader: jspb.BinaryReader): ProductDeleted;
}

export namespace ProductDeleted {
  export type AsObject = {
    id: string,
    correlationId: string,
    createTime: string,
    hash: number,
    organization: string,
    product?: bigblue_products_v0_product_pb.Product.AsObject,
  }
}

export class BundleUpserted extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  getCorrelationId(): string;
  setCorrelationId(value: string): void;

  getCreateTime(): string;
  setCreateTime(value: string): void;

  getHash(): number;
  setHash(value: number): void;

  getOrganization(): string;
  setOrganization(value: string): void;

  hasBundle(): boolean;
  clearBundle(): void;
  getBundle(): bigblue_products_v0_product_pb.Bundle | undefined;
  setBundle(value?: bigblue_products_v0_product_pb.Bundle): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): BundleUpserted.AsObject;
  static toObject(includeInstance: boolean, msg: BundleUpserted): BundleUpserted.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: BundleUpserted, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): BundleUpserted;
  static deserializeBinaryFromReader(message: BundleUpserted, reader: jspb.BinaryReader): BundleUpserted;
}

export namespace BundleUpserted {
  export type AsObject = {
    id: string,
    correlationId: string,
    createTime: string,
    hash: number,
    organization: string,
    bundle?: bigblue_products_v0_product_pb.Bundle.AsObject,
  }
}

export class BundleDeleted extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  getCorrelationId(): string;
  setCorrelationId(value: string): void;

  getCreateTime(): string;
  setCreateTime(value: string): void;

  getHash(): number;
  setHash(value: number): void;

  getOrganization(): string;
  setOrganization(value: string): void;

  hasBundle(): boolean;
  clearBundle(): void;
  getBundle(): bigblue_products_v0_product_pb.Bundle | undefined;
  setBundle(value?: bigblue_products_v0_product_pb.Bundle): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): BundleDeleted.AsObject;
  static toObject(includeInstance: boolean, msg: BundleDeleted): BundleDeleted.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: BundleDeleted, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): BundleDeleted;
  static deserializeBinaryFromReader(message: BundleDeleted, reader: jspb.BinaryReader): BundleDeleted;
}

export namespace BundleDeleted {
  export type AsObject = {
    id: string,
    correlationId: string,
    createTime: string,
    hash: number,
    organization: string,
    bundle?: bigblue_products_v0_product_pb.Bundle.AsObject,
  }
}

export class ContainerUpserted extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  getCorrelationId(): string;
  setCorrelationId(value: string): void;

  getCreateTime(): string;
  setCreateTime(value: string): void;

  getHash(): number;
  setHash(value: number): void;

  getOrganization(): string;
  setOrganization(value: string): void;

  hasContainer(): boolean;
  clearContainer(): void;
  getContainer(): bigblue_products_v0_container_pb.Container | undefined;
  setContainer(value?: bigblue_products_v0_container_pb.Container): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ContainerUpserted.AsObject;
  static toObject(includeInstance: boolean, msg: ContainerUpserted): ContainerUpserted.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ContainerUpserted, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ContainerUpserted;
  static deserializeBinaryFromReader(message: ContainerUpserted, reader: jspb.BinaryReader): ContainerUpserted;
}

export namespace ContainerUpserted {
  export type AsObject = {
    id: string,
    correlationId: string,
    createTime: string,
    hash: number,
    organization: string,
    container?: bigblue_products_v0_container_pb.Container.AsObject,
  }
}

export class ContainerDeleted extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  getCorrelationId(): string;
  setCorrelationId(value: string): void;

  getCreateTime(): string;
  setCreateTime(value: string): void;

  getHash(): number;
  setHash(value: number): void;

  getOrganization(): string;
  setOrganization(value: string): void;

  hasContainer(): boolean;
  clearContainer(): void;
  getContainer(): bigblue_products_v0_container_pb.Container | undefined;
  setContainer(value?: bigblue_products_v0_container_pb.Container): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ContainerDeleted.AsObject;
  static toObject(includeInstance: boolean, msg: ContainerDeleted): ContainerDeleted.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ContainerDeleted, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ContainerDeleted;
  static deserializeBinaryFromReader(message: ContainerDeleted, reader: jspb.BinaryReader): ContainerDeleted;
}

export namespace ContainerDeleted {
  export type AsObject = {
    id: string,
    correlationId: string,
    createTime: string,
    hash: number,
    organization: string,
    container?: bigblue_products_v0_container_pb.Container.AsObject,
  }
}

export class ProductPackUnitUpserted extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  getCorrelationId(): string;
  setCorrelationId(value: string): void;

  getCreateTime(): string;
  setCreateTime(value: string): void;

  getHash(): number;
  setHash(value: number): void;

  getOrganization(): string;
  setOrganization(value: string): void;

  hasProductPackUnit(): boolean;
  clearProductPackUnit(): void;
  getProductPackUnit(): bigblue_products_v0_packunit_pb.ProductPackUnit | undefined;
  setProductPackUnit(value?: bigblue_products_v0_packunit_pb.ProductPackUnit): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ProductPackUnitUpserted.AsObject;
  static toObject(includeInstance: boolean, msg: ProductPackUnitUpserted): ProductPackUnitUpserted.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ProductPackUnitUpserted, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ProductPackUnitUpserted;
  static deserializeBinaryFromReader(message: ProductPackUnitUpserted, reader: jspb.BinaryReader): ProductPackUnitUpserted;
}

export namespace ProductPackUnitUpserted {
  export type AsObject = {
    id: string,
    correlationId: string,
    createTime: string,
    hash: number,
    organization: string,
    productPackUnit?: bigblue_products_v0_packunit_pb.ProductPackUnit.AsObject,
  }
}

export class ProductPackUnitDeleted extends jspb.Message {
  getId(): string;
  setId(value: string): void;

  getCorrelationId(): string;
  setCorrelationId(value: string): void;

  getCreateTime(): string;
  setCreateTime(value: string): void;

  getHash(): number;
  setHash(value: number): void;

  getOrganization(): string;
  setOrganization(value: string): void;

  hasProductPackUnit(): boolean;
  clearProductPackUnit(): void;
  getProductPackUnit(): bigblue_products_v0_packunit_pb.ProductPackUnit | undefined;
  setProductPackUnit(value?: bigblue_products_v0_packunit_pb.ProductPackUnit): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ProductPackUnitDeleted.AsObject;
  static toObject(includeInstance: boolean, msg: ProductPackUnitDeleted): ProductPackUnitDeleted.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ProductPackUnitDeleted, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ProductPackUnitDeleted;
  static deserializeBinaryFromReader(message: ProductPackUnitDeleted, reader: jspb.BinaryReader): ProductPackUnitDeleted;
}

export namespace ProductPackUnitDeleted {
  export type AsObject = {
    id: string,
    correlationId: string,
    createTime: string,
    hash: number,
    organization: string,
    productPackUnit?: bigblue_products_v0_packunit_pb.ProductPackUnit.AsObject,
  }
}


