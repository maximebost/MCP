// source: bigblue/products/v0/packunit.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var bigblue_common_event_pb = require('proto-ts-common/event_pb.js');
goog.object.extend(proto, bigblue_common_event_pb);
goog.exportSymbol('proto.bigblue.products.v0.ProductPackUnit', null, global);
goog.exportSymbol('proto.bigblue.products.v0.ProductPackUnitInnerContent', null, global);
goog.exportSymbol('proto.bigblue.products.v0.ProductPackUnitVersion', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bigblue.products.v0.ProductPackUnit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bigblue.products.v0.ProductPackUnit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bigblue.products.v0.ProductPackUnit.displayName = 'proto.bigblue.products.v0.ProductPackUnit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bigblue.products.v0.ProductPackUnitInnerContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bigblue.products.v0.ProductPackUnitInnerContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bigblue.products.v0.ProductPackUnitInnerContent.displayName = 'proto.bigblue.products.v0.ProductPackUnitInnerContent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bigblue.products.v0.ProductPackUnitVersion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bigblue.products.v0.ProductPackUnitVersion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bigblue.products.v0.ProductPackUnitVersion.displayName = 'proto.bigblue.products.v0.ProductPackUnitVersion';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bigblue.products.v0.ProductPackUnit.prototype.toObject = function(opt_includeInstance) {
  return proto.bigblue.products.v0.ProductPackUnit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bigblue.products.v0.ProductPackUnit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.ProductPackUnit.toObject = function(includeInstance, msg) {
  var f, obj = {
    product: jspb.Message.getFieldWithDefault(msg, 1, ""),
    baseUnitQuantity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    barcode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    innerContent: (f = msg.getInnerContent()) && proto.bigblue.products.v0.ProductPackUnitInnerContent.toObject(includeInstance, f),
    createTime: jspb.Message.getFieldWithDefault(msg, 5, ""),
    updateTime: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bigblue.products.v0.ProductPackUnit}
 */
proto.bigblue.products.v0.ProductPackUnit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bigblue.products.v0.ProductPackUnit;
  return proto.bigblue.products.v0.ProductPackUnit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bigblue.products.v0.ProductPackUnit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bigblue.products.v0.ProductPackUnit}
 */
proto.bigblue.products.v0.ProductPackUnit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProduct(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBaseUnitQuantity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarcode(value);
      break;
    case 4:
      var value = new proto.bigblue.products.v0.ProductPackUnitInnerContent;
      reader.readMessage(value,proto.bigblue.products.v0.ProductPackUnitInnerContent.deserializeBinaryFromReader);
      msg.setInnerContent(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateTime(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdateTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bigblue.products.v0.ProductPackUnit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bigblue.products.v0.ProductPackUnit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bigblue.products.v0.ProductPackUnit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.ProductPackUnit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProduct();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBaseUnitQuantity();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getBarcode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInnerContent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.bigblue.products.v0.ProductPackUnitInnerContent.serializeBinaryToWriter
    );
  }
  f = message.getCreateTime();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUpdateTime();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string product = 1;
 * @return {string}
 */
proto.bigblue.products.v0.ProductPackUnit.prototype.getProduct = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bigblue.products.v0.ProductPackUnit} returns this
 */
proto.bigblue.products.v0.ProductPackUnit.prototype.setProduct = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 base_unit_quantity = 2;
 * @return {number}
 */
proto.bigblue.products.v0.ProductPackUnit.prototype.getBaseUnitQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bigblue.products.v0.ProductPackUnit} returns this
 */
proto.bigblue.products.v0.ProductPackUnit.prototype.setBaseUnitQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string barcode = 3;
 * @return {string}
 */
proto.bigblue.products.v0.ProductPackUnit.prototype.getBarcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bigblue.products.v0.ProductPackUnit} returns this
 */
proto.bigblue.products.v0.ProductPackUnit.prototype.setBarcode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ProductPackUnitInnerContent inner_content = 4;
 * @return {?proto.bigblue.products.v0.ProductPackUnitInnerContent}
 */
proto.bigblue.products.v0.ProductPackUnit.prototype.getInnerContent = function() {
  return /** @type{?proto.bigblue.products.v0.ProductPackUnitInnerContent} */ (
    jspb.Message.getWrapperField(this, proto.bigblue.products.v0.ProductPackUnitInnerContent, 4));
};


/**
 * @param {?proto.bigblue.products.v0.ProductPackUnitInnerContent|undefined} value
 * @return {!proto.bigblue.products.v0.ProductPackUnit} returns this
*/
proto.bigblue.products.v0.ProductPackUnit.prototype.setInnerContent = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bigblue.products.v0.ProductPackUnit} returns this
 */
proto.bigblue.products.v0.ProductPackUnit.prototype.clearInnerContent = function() {
  return this.setInnerContent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bigblue.products.v0.ProductPackUnit.prototype.hasInnerContent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string create_time = 5;
 * @return {string}
 */
proto.bigblue.products.v0.ProductPackUnit.prototype.getCreateTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.bigblue.products.v0.ProductPackUnit} returns this
 */
proto.bigblue.products.v0.ProductPackUnit.prototype.setCreateTime = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string update_time = 6;
 * @return {string}
 */
proto.bigblue.products.v0.ProductPackUnit.prototype.getUpdateTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.bigblue.products.v0.ProductPackUnit} returns this
 */
proto.bigblue.products.v0.ProductPackUnit.prototype.setUpdateTime = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bigblue.products.v0.ProductPackUnitInnerContent.prototype.toObject = function(opt_includeInstance) {
  return proto.bigblue.products.v0.ProductPackUnitInnerContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bigblue.products.v0.ProductPackUnitInnerContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.ProductPackUnitInnerContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    productPackBaseUnitQuantity: jspb.Message.getFieldWithDefault(msg, 1, 0),
    quantity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bigblue.products.v0.ProductPackUnitInnerContent}
 */
proto.bigblue.products.v0.ProductPackUnitInnerContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bigblue.products.v0.ProductPackUnitInnerContent;
  return proto.bigblue.products.v0.ProductPackUnitInnerContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bigblue.products.v0.ProductPackUnitInnerContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bigblue.products.v0.ProductPackUnitInnerContent}
 */
proto.bigblue.products.v0.ProductPackUnitInnerContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setProductPackBaseUnitQuantity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bigblue.products.v0.ProductPackUnitInnerContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bigblue.products.v0.ProductPackUnitInnerContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bigblue.products.v0.ProductPackUnitInnerContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.ProductPackUnitInnerContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductPackBaseUnitQuantity();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 product_pack_base_unit_quantity = 1;
 * @return {number}
 */
proto.bigblue.products.v0.ProductPackUnitInnerContent.prototype.getProductPackBaseUnitQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bigblue.products.v0.ProductPackUnitInnerContent} returns this
 */
proto.bigblue.products.v0.ProductPackUnitInnerContent.prototype.setProductPackBaseUnitQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 quantity = 2;
 * @return {number}
 */
proto.bigblue.products.v0.ProductPackUnitInnerContent.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bigblue.products.v0.ProductPackUnitInnerContent} returns this
 */
proto.bigblue.products.v0.ProductPackUnitInnerContent.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bigblue.products.v0.ProductPackUnitVersion.prototype.toObject = function(opt_includeInstance) {
  return proto.bigblue.products.v0.ProductPackUnitVersion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bigblue.products.v0.ProductPackUnitVersion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.ProductPackUnitVersion.toObject = function(includeInstance, msg) {
  var f, obj = {
    correlationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createTime: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hash: jspb.Message.getFieldWithDefault(msg, 3, 0),
    changeType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    productPackUnit: (f = msg.getProductPackUnit()) && proto.bigblue.products.v0.ProductPackUnit.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bigblue.products.v0.ProductPackUnitVersion}
 */
proto.bigblue.products.v0.ProductPackUnitVersion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bigblue.products.v0.ProductPackUnitVersion;
  return proto.bigblue.products.v0.ProductPackUnitVersion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bigblue.products.v0.ProductPackUnitVersion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bigblue.products.v0.ProductPackUnitVersion}
 */
proto.bigblue.products.v0.ProductPackUnitVersion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorrelationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setHash(value);
      break;
    case 4:
      var value = /** @type {!proto.bigblue.common.ChangeType} */ (reader.readEnum());
      msg.setChangeType(value);
      break;
    case 5:
      var value = new proto.bigblue.products.v0.ProductPackUnit;
      reader.readMessage(value,proto.bigblue.products.v0.ProductPackUnit.deserializeBinaryFromReader);
      msg.setProductPackUnit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bigblue.products.v0.ProductPackUnitVersion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bigblue.products.v0.ProductPackUnitVersion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bigblue.products.v0.ProductPackUnitVersion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bigblue.products.v0.ProductPackUnitVersion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCorrelationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateTime();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHash();
  if (f !== 0) {
    writer.writeFixed64(
      3,
      f
    );
  }
  f = message.getChangeType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getProductPackUnit();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.bigblue.products.v0.ProductPackUnit.serializeBinaryToWriter
    );
  }
};


/**
 * optional string correlation_id = 1;
 * @return {string}
 */
proto.bigblue.products.v0.ProductPackUnitVersion.prototype.getCorrelationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bigblue.products.v0.ProductPackUnitVersion} returns this
 */
proto.bigblue.products.v0.ProductPackUnitVersion.prototype.setCorrelationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string create_time = 2;
 * @return {string}
 */
proto.bigblue.products.v0.ProductPackUnitVersion.prototype.getCreateTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bigblue.products.v0.ProductPackUnitVersion} returns this
 */
proto.bigblue.products.v0.ProductPackUnitVersion.prototype.setCreateTime = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional fixed64 hash = 3;
 * @return {number}
 */
proto.bigblue.products.v0.ProductPackUnitVersion.prototype.getHash = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bigblue.products.v0.ProductPackUnitVersion} returns this
 */
proto.bigblue.products.v0.ProductPackUnitVersion.prototype.setHash = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bigblue.common.ChangeType change_type = 4;
 * @return {!proto.bigblue.common.ChangeType}
 */
proto.bigblue.products.v0.ProductPackUnitVersion.prototype.getChangeType = function() {
  return /** @type {!proto.bigblue.common.ChangeType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.bigblue.common.ChangeType} value
 * @return {!proto.bigblue.products.v0.ProductPackUnitVersion} returns this
 */
proto.bigblue.products.v0.ProductPackUnitVersion.prototype.setChangeType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional ProductPackUnit product_pack_unit = 5;
 * @return {?proto.bigblue.products.v0.ProductPackUnit}
 */
proto.bigblue.products.v0.ProductPackUnitVersion.prototype.getProductPackUnit = function() {
  return /** @type{?proto.bigblue.products.v0.ProductPackUnit} */ (
    jspb.Message.getWrapperField(this, proto.bigblue.products.v0.ProductPackUnit, 5));
};


/**
 * @param {?proto.bigblue.products.v0.ProductPackUnit|undefined} value
 * @return {!proto.bigblue.products.v0.ProductPackUnitVersion} returns this
*/
proto.bigblue.products.v0.ProductPackUnitVersion.prototype.setProductPackUnit = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bigblue.products.v0.ProductPackUnitVersion} returns this
 */
proto.bigblue.products.v0.ProductPackUnitVersion.prototype.clearProductPackUnit = function() {
  return this.setProductPackUnit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bigblue.products.v0.ProductPackUnitVersion.prototype.hasProductPackUnit = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.bigblue.products.v0);

